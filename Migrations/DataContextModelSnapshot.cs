// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWAPP.Data;

#nullable disable

namespace SWAPP.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SWAPP.Entities.Appointment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("aptype")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("c_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("contno")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("descript")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("qty")
                        .HasColumnType("double");

                    b.Property<DateOnly?>("sdate")
                        .HasColumnType("date");

                    b.Property<int?>("slot")
                        .HasColumnType("int");

                    b.Property<string>("stk_no")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("vehno")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("tb_appoinments");
                });

            modelBuilder.Entity("SWAPP.Entities.Commision", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("amount")
                        .HasColumnType("double");

                    b.Property<string>("company")
                        .HasColumnType("longtext");

                    b.Property<string>("descr")
                        .HasColumnType("longtext");

                    b.Property<string>("invno")
                        .HasColumnType("longtext");

                    b.Property<string>("mtype")
                        .HasColumnType("longtext");

                    b.Property<string>("ref_no")
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("sdate")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.ToTable("s_comm");
                });

            modelBuilder.Entity("SWAPP.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("town")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("SWAPP.Entities.DepositMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("bank")
                        .HasColumnType("longtext");

                    b.Property<string>("refno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("sdate")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.ToTable("dep_cheq_mas");
                });

            modelBuilder.Entity("SWAPP.Entities.DepositTran", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("amount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("depositid")
                        .HasColumnType("int");

                    b.Property<string>("pdno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("depositid");

                    b.ToTable("dep_cheq_trn");
                });

            modelBuilder.Entity("SWAPP.Entities.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("brand_name")
                        .HasColumnType("longtext");

                    b.Property<string>("part_no")
                        .HasColumnType("longtext");

                    b.Property<string>("stk_no")
                        .HasColumnType("longtext");

                    b.Property<string>("substitute")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("s_mas");
                });

            modelBuilder.Entity("SWAPP.Entities.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("amount")
                        .HasColumnType("double");

                    b.Property<string>("cuscode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("gst")
                        .HasColumnType("double");

                    b.Property<string>("refno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("sdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("trn_type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("C_BAL");
                });

            modelBuilder.Entity("SWAPP.Entities.Sale", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("c_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("cus_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("grand_tot")
                        .HasColumnType("double");

                    b.Property<double>("gst")
                        .HasColumnType("double");

                    b.Property<string>("ref_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("sdate")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.ToTable("S_SALMA");
                });

            modelBuilder.Entity("SWAPP.Entities.SpDiscount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("dis1")
                        .HasColumnType("double");

                    b.Property<double>("dis2")
                        .HasColumnType("double");

                    b.Property<int?>("inv_id")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ref_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("sdate")
                        .HasColumnType("date");

                    b.Property<double>("sptot")
                        .HasColumnType("double");

                    b.Property<string>("stk_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("sp_discount_trn");
                });

            modelBuilder.Entity("SWAPP.Entities.DepositTran", b =>
                {
                    b.HasOne("SWAPP.Entities.DepositMaster", "DepositMaster")
                        .WithMany("DepositTrans")
                        .HasForeignKey("depositid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepositMaster");
                });

            modelBuilder.Entity("SWAPP.Entities.DepositMaster", b =>
                {
                    b.Navigation("DepositTrans");
                });
#pragma warning restore 612, 618
        }
    }
}
